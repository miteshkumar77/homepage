{"version":3,"sources":["resume.pdf","pillreminder.png","fbchess.png","linefollower.png","components/about.js","components/navbar.js","components/projects.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","paper","height","width","control","paddingTop","spacing","title","alignSelf","justifyContent","IconLink","props","Button","href","SvgIcon","fontSize","d","path","About","classes","className","Typography","variant","align","component","menuButton","marginRight","toolbar","alignItems","paddingBottom","Navbar","AppBar","color","position","Toolbar","Resume","map","value","key","CodeIcon","button_label","content","display","gridTemplateColumns","gridGap","gridAutoRows","label","useCardStyles","maxWidth","media","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","PillReminderProject","React","useState","expanded","setExpanded","Card","CardHeader","action","subheader","CardMedia","image","pillReminderImg","CardContent","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","paragraph","FBChessProject","fbChessImg","LineFollowerProject","lineFollowerImg","Projects","Theme","createMuiTheme","palette","primary","blue","secondary","grey","App","CssBaseline","Container","fixed","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c985fc72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.7e1bf75e.pdf\";","module.exports = __webpack_public_path__ + \"static/media/pillreminder.63621466.png\";","module.exports = __webpack_public_path__ + \"static/media/fbchess.0bf49999.png\";","module.exports = __webpack_public_path__ + \"static/media/linefollower.5bca3562.png\";","import React, { Component } from 'react'; \r\nimport ReactDOM from 'react-dom';\r\nimport { Toolbar, AppBar, Grid, Button, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport Typography from '@material-ui/core/Typography';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst LinkedInIcon = 'M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z'; \r\nconst GithubIcon = 'M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z';\r\nconst CodeIcon = 'M129.204085,3126.419 C129.587463,3126.032 129.587463,3125.405 129.204085,3125.018 L129.191207,3125.005 C128.807829,3124.618 128.186697,3124.618 127.803319,3125.005 L124.287534,3128.553 C123.904155,3128.94 123.904155,3129.568 124.287534,3129.955 L127.803319,3133.503 C128.186697,3133.89 128.807829,3133.89 129.191207,3133.503 L129.204085,3133.49 C129.587463,3133.103 129.587463,3132.476 129.204085,3132.089 L127.090057,3129.955 C126.706679,3129.568 126.706679,3128.94 127.090057,3128.553 L129.204085,3126.419 Z M142.712466,3128.553 L139.196681,3125.005 C138.814294,3124.618 138.192171,3124.618 137.808793,3125.005 L137.795915,3125.018 C137.412537,3125.405 137.412537,3126.032 137.795915,3126.419 L139.910934,3128.553 C140.294312,3128.94 140.294312,3129.568 139.910934,3129.955 L137.795915,3132.089 C137.412537,3132.476 137.412537,3133.103 137.795915,3133.49 L137.808793,3133.503 C138.192171,3133.89 138.814294,3133.89 139.196681,3133.503 L142.712466,3129.955 C143.095845,3129.568 143.095845,3128.94 142.712466,3128.553 L142.712466,3128.553 Z M136.809359,3124.40817 L131.74698,3135.23866 C131.582981,3135.57915 131.295245,3136 130.924037,3136 L130.904396,3136 C130.182602,3136 129.712209,3135.0197 130.031369,3134.3588 L135.064287,3123.63077 C135.228287,3123.29128 135.836165,3123.02511 135.836165,3123.02511 L135.836165,3123 C136.818198,3123 137.127538,3123.74728 136.809359,3124.40817 L136.809359,3124.40817 Z'\r\nconst LinkedInPath = 'https://www.linkedin.com/in/-miteshkumar';\r\nconst GithubPath = 'https://github.com/miteshkumar77';\r\nconst PillReminderPath = 'https://github.com/miteshkumar77/pill_dispenser/tree/master/application'; \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      height: 140,\r\n      width: 100,\r\n    },\r\n    control: {\r\n      paddingTop: theme.spacing(10),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        alignSelf: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n  }));\r\n\r\n\r\n\r\nfunction IconLink(props) {\r\n  return (\r\n    <Button\r\n      href={props.href}\r\n    >\r\n      <SvgIcon fontSize='large'>\r\n        <path d={props.path}/>\r\n      </SvgIcon>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default function About() {\r\n\r\n    \r\n    \r\n    const classes = useStyles(); \r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <div className={classes.control}>\r\n              <Typography className={classes.title} variant=\"h1\" align='center'>\r\n                  Mitesh Kumar\r\n              </Typography>\r\n\r\n\r\n\r\n              <IconLink path={GithubIcon} href={GithubPath}/>\r\n              <IconLink path={LinkedInIcon} href={LinkedInPath}/>\r\n\r\n              \r\n          {/* </div>\r\n\r\n          <div className={classes.control}> */}\r\n              <Typography variant=\"h5\" component=\"h2\" align='center'>\r\n              Hi, I am a Computer Science student at Rensselaer Polytechnic Institute. \r\n              </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Toolbar, AppBar, Grid, Button, Container } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport About from \"./about\";\r\nimport Resume from \"../resume.pdf\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: {\r\n    alignItems: \"flex-center\",\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar color=\"primary\" position=\"sticky\">\r\n        <Toolbar className={classes.toolbar}>\r\n          {[\r\n            [\"About\", \"\"],\r\n            [\"Resumé\", Resume],\r\n            [\"Research\", \"\"],\r\n            [\"Projects\", \"\"],\r\n          ].map((value) => (\r\n            <Button color=\"inherit\" href={value[1]} key={value[0]}>\r\n              {value[0]}\r\n            </Button>\r\n          ))}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { Toolbar, AppBar, Grid, Button, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'; \nimport Typography from '@material-ui/core/Typography';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport React from 'react';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport pillReminderImg from '../pillreminder.png'; \nimport fbChessImg from '../fbchess.png'; \nimport lineFollowerImg from '../linefollower.png'; \n\nconst LinkedInIcon = 'M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z'; \nconst GithubIcon = 'M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z';\nconst CodeIcon = 'M15.1,3.8c0.1,0.1,0.1,0.2,0,0.3l-4.7,16.1c0,0.1-0.1,0.2-0.2,0.2c-0.1,0.1-0.2,0.1-0.3,0l-0.8-0.2  c-0.1,0-0.2-0.1-0.2-0.2c-0.1-0.1-0.1-0.2,0-0.3l4.7-16.1c0-0.1,0.1-0.2,0.2-0.2c0.1-0.1,0.2-0.1,0.3,0l0.8,0.2  C14.9,3.7,15,3.7,15.1,3.8z M7.8,6.8c0-0.1,0-0.2-0.1-0.3L7.1,5.9C7,5.8,6.9,5.8,6.8,5.8s-0.2,0-0.3,0.1l-5.8,5.8  c-0.1,0.1-0.1,0.2-0.1,0.3s0,0.2,0.1,0.3l5.8,5.8c0.1,0.1,0.2,0.1,0.3,0.1s0.2,0,0.3-0.1l0.6-0.6c0.1-0.1,0.1-0.2,0.1-0.3  c0-0.1,0-0.2-0.1-0.3L2.8,12l4.9-4.9C7.8,7,7.8,6.9,7.8,6.8z M23.3,11.7l-5.8-5.8c-0.1-0.1-0.2-0.1-0.3-0.1c-0.1,0-0.2,0-0.3,0.1  l-0.6,0.6c-0.1,0.1-0.1,0.2-0.1,0.3s0,0.2,0.1,0.3l4.9,4.9l-4.9,4.9c-0.1,0.1-0.1,0.2-0.1,0.3c0,0.1,0,0.2,0.1,0.3l0.6,0.6  c0.1,0.1,0.2,0.1,0.3,0.1c0.1,0,0.2,0,0.3-0.1l5.8-5.8c0.1-0.1,0.1-0.2,0.1-0.3C23.4,11.9,23.4,11.8,23.3,11.7z'\nconst LinkedInPath = 'https://www.linkedin.com/in/-miteshkumar';\nconst GithubPath = 'https://github.com/miteshkumar77';\nconst fbChessPath = 'https://github.com/miteshkumar77/fbchess'; \nconst PillReminderPath = 'https://github.com/miteshkumar77/pill_dispenser/tree/master/application'; \nconst LineFollowerPath = 'https://github.com/miteshkumar77/LineFollower'; \nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    button_label: {\n      marginRight: \"10px\",\n    },\n    paper: {\n      height: 140,\n      width: 100,\n    },\n    content: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridGap: '10px',\n        gridAutoRows: 'minmax(100px, auto)'\n    },\n    control: {\n      paddingTop: theme.spacing(10),\n    },\n    title: {\n        flexGrow: 1,\n        alignSelf: 'center',\n        justifyContent: 'center'\n    }\n  }));\n\n\n\nfunction IconLink(props) {\n  const classes = useStyles(); \n\n  return (\n    <Button\n      href={props.href}\n    >\n      <div className={classes.button_label}>  \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.label}\n        </Typography>\n      </div>\n      <SvgIcon fontSize='large'>\n        <path d={props.path}/>\n      </SvgIcon>\n    </Button>\n  )\n}\n\nconst useCardStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  }));\n\nfunction PillReminderProject() {\n    const classes = useCardStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  \n    return (\n      <Card className={classes.root}>\n        <CardHeader\n        \n          action={\n            <IconLink path={CodeIcon} href={PillReminderPath} label={\"Source Code\"}/>\n          }\n          title=\"Pill Reminder\"\n          subheader=\"April 2020\"\n        />\n        <CardMedia\n          className={classes.media}\n          image={pillReminderImg}\n          title=\"Pill Reminder Dashboard\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            A web app to help users keep track of their medicine intake. \n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n            title=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n              <Typography paragraph>\n                Used GraphQL, Node.js, and MongoDB to build a backend that implements CRUD operations on \n                user inputted data. \n              </Typography>\n              <Typography paragraph>\n                Developed a cron job server that monitors the database and sends push notification reminders\n                to the user's mobile device when applicable. \n              </Typography>\n              <Typography paragraph>\n                Developed a front-end using ReactJS\n              </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    );\n  }\n\n  function FBChessProject() {\n    const classes = useCardStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  \n    return (\n      <Card className={classes.root}>\n        <CardHeader\n        \n          action={\n            <IconLink path={CodeIcon} href={fbChessPath} label={\"Source Code\"}/>\n          }\n          title=\"FB Chess\"\n          subheader=\"June 2020\"\n        />\n        <CardMedia\n          className={classes.media}\n          image={fbChessImg}\n          title=\"FB Chess Login Screen\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            A web chat app that that can be used to play online chess with friends.  \n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n            title=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n              <Typography paragraph>\n                Used Node.js, Socket.io, and MongoDB to build a backend server that recieves\n                and relays messages, handles the state of the chess game,\n                and persists the chat history to the database. \n              </Typography>\n              <Typography paragraph>\n                Implemented a caching strategy to lower Database transactions and increase \n                responsiveness of the app. \n              </Typography>\n              <Typography paragraph>\n                Developed a front-end using ReactJS\n              </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    );\n  }\n\n\n\n  function LineFollowerProject() {\n    const classes = useCardStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  \n    return (\n      <Card className={classes.root}>\n        <CardHeader\n        \n          action={\n            <IconLink path={CodeIcon} href={LineFollowerPath} label={\"Source Code\"}/>\n          }\n          title=\"Line Follower\"\n          subheader=\"January 2020\"\n        />\n        <CardMedia\n          className={classes.media}\n          image={lineFollowerImg}\n          title=\"Line Follower Car\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            An arduino controlled car that reliably follows a black tape path.  \n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n            title=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n              <Typography paragraph>\n                Implemented and tuned several Proportional Integral Derivative control algorithms, each \n                made to control the car in specific situations such as sharp turns, and broken lines, etc.  \n              </Typography>\n              <Typography paragraph>\n                Had the fastest and most reliable car in a course wide contest. \n              </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    );\n  }\nexport default function Projects() {\n\n    \n    \n    const classes = useStyles(); \n\n    return (\n        <div className={classes.root} >\n            <Typography className={classes.title} variant=\"h3\" align='center'>\n                Projects\n            </Typography>\n            <div className={classes.control}>\n              \n\n                <div className={classes.content}>    \n                    <div>\n                        <FBChessProject />\n                    </div>\n                    <div>\n                        <PillReminderProject /> \n                    </div>\n                    <div>\n                        <LineFollowerProject />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n    \n}\n\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport grey from '@material-ui/core/colors/grey'; \r\n\r\nconst Theme = createMuiTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: grey,\r\n    backgroundColor: grey\r\n  },\r\n});\r\n\r\nexport default Theme; ","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Navbar from \"./components/navbar\";\r\nimport About from \"./components/about\";\r\nimport Projects from \"./components/projects\"; \r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Container, MuiThemeProvider } from \"@material-ui/core\";\r\nimport Theme from \"./theme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <MuiThemeProvider theme={Theme}>\r\n        <CssBaseline />\r\n        <Navbar />\r\n        <Container fixed>\r\n          <About />\r\n          <hr className=\"solid\" />\r\n          <Projects /> \r\n          <hr className=\"solid\" /> \r\n          \r\n        </Container>\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport BrowserRouter from 'react-router-dom/BrowserRouter'; \r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App/>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}